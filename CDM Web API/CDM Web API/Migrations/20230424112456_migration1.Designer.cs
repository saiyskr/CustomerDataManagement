// <auto-generated />
using CDM_Web_API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CDM_Web_API.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    [Migration("20230424112456_migration1")]
    partial class migration1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CDM_Web_API.Models.Account", b =>
                {
                    b.Property<string>("email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("accountId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("accountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("expenses")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("gstin")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("latitude")
                        .HasColumnType("float");

                    b.Property<string>("location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("longitude")
                        .HasColumnType("float");

                    b.Property<string>("manager")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("noOfDept")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("noOfEmp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("operatingHours")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("profit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("revenue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("servicesOffered")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("yearOfEst")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("email");

                    b.HasIndex("gstin");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("CDM_Web_API.Models.Customer", b =>
                {
                    b.Property<string>("gstin")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("cname")
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("countryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("headquarter")
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("typeOfCompany")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("website")
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("gstin");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("CDM_Web_API.Models.Account", b =>
                {
                    b.HasOne("CDM_Web_API.Models.Customer", "Customer")
                        .WithMany("Accounts")
                        .HasForeignKey("gstin");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("CDM_Web_API.Models.Customer", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
